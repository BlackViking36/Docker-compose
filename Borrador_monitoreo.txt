Paso 10: (Telegraf, InfluxDB y Grafana)

  # Telegraf recopila datos y los envía a InfluxDB, y Grafana solo se conecta a InfluxDB para visualizarlos.

  # sudo mkdir -p /home/pi/telegraf /home/pi/influxdb /home/pi/grafana

  Dentro de /home/pi, crea el archivo docker-compose.yml que contenga los tres servicios:

  version: '3.9'
services:
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - ./influxdb/data:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=telegraf
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=adminpassword

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    depends_on:
      - influxdb
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    environment:
      - HOST_PROC=/host/proc
      - HOST_SYS=/host/sys
      - HOST_ETC=/host/etc
    network_mode: "host" # Necesario para monitorear la red del host

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Lisandro@10

Paso 11: Configurar Telegraf
  # Dentro de la carpeta /home/pi/telegraf, crea el archivo telegraf.conf con esta configuración básica para monitorear la red y el sistema:
    sudo nano -p /home/pi/telegraf/telegraf.conf
  
  [agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  omit_hostname = false

[[outputs.influxdb]]
  url = "http://influxdb:8086"
  database = "telegraf"
  username = "admin"
  password = "adminpassword"

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false

[[inputs.mem]]

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs"]

[[inputs.net]]

# Esta configuración recogerá información del CPU, memoria, disco, y red.

# Luedo ejecutamos docker-compose up -d 